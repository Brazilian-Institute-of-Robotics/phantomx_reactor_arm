<?xml version="1.0"?>
<launch>
    
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find phantomx_reactor_arm_description)/urdf/phantomx_reactor_wrist_gripper.urdf.xacro'" />

    <node name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
        <rosparam file="$(find phantomx_reactor_arm_controller)/config/dynamixel_manager.yaml" command="load" />
    </node>

    <!-- Load controller configuration to parameter server -->
    <rosparam file="$(find phantomx_reactor_arm_controller)/config/dynamixel_controllers.yaml" command="load" />    
    
	<!-- start specified joint controllers -->
	<node name="dynamixel_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
			args="--manager=dxl_manager
				--port=arbotix_port
				--type=simple
				gripper_joint
				wrist_roll
				wrist_pitch
				elbow_pitch
				shoulder_pitch
				shoulder_yaw"
			output="screen"/>

	<node name="dynamixel_controller_spawner2" pkg="dynamixel_controllers" type="controller_spawner.py"
			args="--manager=dxl_manager
				--type=meta
				arm_controller
				wrist_roll
				wrist_pitch
				elbow_pitch
				shoulder_pitch
				shoulder_yaw"
			output="screen"/>

	<node name="grip_controller" pkg="arbotix_controllers" type="gripper_controller" output="screen" >
		<param name="model" value="parallel"/>
		<param name="joint" value="gripper_joint"/>
	</node>

	<!-- Start the Dynamixel Joint States Publisher -->
	<node name="dynamixel_joint_states_publisher" pkg="phantomx_reactor_arm_controller" type="dynamixel_joint_state_publisher.py" output="screen" >
		<param name="rate" value="15"/>
	</node>

	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>

	<include file="$(find phantomx_reactor_arm_moveit_config)/launch/demo.launch"/>
 
</launch>


